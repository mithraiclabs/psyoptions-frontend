# TODO make sure CodePipeline is properly listening to triggers
# TODO make the short sha dynamically update
Parameters:
  AwsRegion:
    Description: The AWS region resources should be deployed to
    Type: String
    Default: us-east-1
  AwsAccontId:
    Description: The AWS account resources should be deployed to
    Type: String
  EcrRepositoryUrl:
    Description: The full URL for the ECR repository
    Type: String
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  FullRepositoryId:
    Description: GitHub organization / repository name
    Type: String
    Default: mithraiclabs/psyoptions-frontend
  CodeStarGithubConnectionArn:
    Description: The ARN for the CodeStar Connection used in the CodePipeline
    Type: String
  ApplicationName:
    Description: CodeDeploy application name
    Type: String
    Default: PsyOptions-Frontend
  SubnetId:
    Description: Id of the subnet to use
    Type: String
  VpcId:
    Description: Id of the VPC to use
    Type: String
Resources:
  DockerImageRepository:
    Type: 'AWS::ECR::PublicRepository'
    Properties:
      RepositoryName: psyoptions-frontend
      # RepositoryPolicyText: Json
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodeBuild-Service-ECR
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:PutImage'
                  - 'ecr:UploadLayerPart'
                Resource: !GetAtt DockerImageRepository.Arn
  EcsTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: AWS-ECSTask-GetImage-PsyOptions-Frontend
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:BatchGetImage'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:GetDownloadUrlForLayer'
                Resource: '*'
        - PolicyName: AWS-ECSTask-all-secrets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:*'
                  - 'ssm:*'
                Resource: '*'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: psyoptions-fronted
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Ref AwsRegion
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AwsAccontId
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: psyoptions-frontend
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: latest
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      CapacityProviders:
        - FARGATE
      ClusterName: PsyOptions-Frontend
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Opens port 80 for the instance
      GroupName: PsyOptions-Frontend
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId
  FrontEndServerTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - node ./dist/index.js
          Cpu: 512
          Environment:
            - Name: DEVNET_PROGRAM_ID
              Value: GDvqQy3FkDB2wyNwgZGp5YkmRMUmWbhNNWDMYKbLSZ5N
            - Name: APP_ENABLED
              Value: 'true'
            - Name: DEVNET_DEX_PROGRAM_ID
              Value: DESVgJVGajEgKGXhb6XmqDHGz3VjdgP7rEVESBgxmroY
            - Name: APP_PASSWORD
              Value: 89fe0dbb9a8e940c4e88f40ae9738db57dbe38a8
            - Name: APP_PASSWORD_PROTECTED
              Value: 'true'
            - Name: INITIALIZE_PAGE_ENABLED
              Value: 'true'
            - Name: SHORT_SHA
              Value: ef94cee
            - Name: BRANCH_NAME
              Value: master
            - Name: SENTRY_ENVIRONMENT
              Value: staging
            - Name: DEVNET_FAUCET_USDC
              Value: E6wQSMPGqHn7dqEMeWcSVfjdkwd8ED5CncQ9BtMNGtUG
            - Name: DEVNET_FAUCET_BTC
              Value: 97z3NzcDxqRMyE7F73PuHEmAbA72S7eDopjhe7GTymTk
            - Name: DEVNET_FAUCET_PSY
              Value: 7jJJnHWagPPG544FtxSVp8eD52FwCsARcqqup1q3XVio
          Essential: true
          # Hostname: String
          Image: !Ref EcrRepositoryUrl
          # LogConfiguration: LogConfiguration
          Memory: 1024
          MemoryReservation: 256
          Name: PsyOptions-Frontend-Server
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
          # ReadonlyRootFilesystem: Boolean
          # WorkingDirectory: app
      Cpu: 512
      # EphemeralStorage: EphemeralStorage
      ExecutionRoleArn: !GetAtt EcsTaskRole.Arn
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      # TaskRoleArn: String
  EcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !GetAtt EcsCluster.Arn
      DeploymentController:
        Type: ECS
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref EcsSecurityGroup
          Subnets:
            - !Ref SubnetId
      ServiceName: PsyOptions-Frontend-Server
      TaskDefinition: !Ref FrontEndServerTask
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join
              - ''
              - - !GetAtt
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: github-events-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: !Ref CodeStarGithubConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref BranchName
                DetectChanges: true
                OutputArtifactFormat: 'CODE_ZIP'
              Region: !Ref AwsRegion
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Region: !Ref AwsRegion
              RunOrder: 2
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: Amazon ECS
                Version: 1
              Configuration:
                ClusterName: !Ref EcsCluster
                ServiceName: !GetAtt EcsService.name
                FileName: imagedefinitions.json
                DeploymentTimeout: 15
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
